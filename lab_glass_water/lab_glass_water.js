!function(e){var t=window.webpackHotUpdate;window.webpackHotUpdate=function(e,n){!function(e,t){if(!x[e]||!w[e])return;for(var n in w[e]=!1,t)Object.prototype.hasOwnProperty.call(t,n)&&(b[n]=t[n]);0==--v&&0===m&&M()}(e,n),t&&t(e,n)};var n,o=!0,r="451bf7e05f9f7d75ff45",i={},a=[],s=[];function c(e){var t=A[e];if(!t)return E;var o=function(o){return t.hot.active?(A[o]?-1===A[o].parents.indexOf(e)&&A[o].parents.push(e):(a=[e],n=o),-1===t.children.indexOf(o)&&t.children.push(o)):(console.warn("[HMR] unexpected require("+o+") from disposed module "+e),a=[]),E(o)},r=function(e){return{configurable:!0,enumerable:!0,get:function(){return E[e]},set:function(t){E[e]=t}}};for(var i in E)Object.prototype.hasOwnProperty.call(E,i)&&"e"!==i&&"t"!==i&&Object.defineProperty(o,i,r(i));return o.e=function(e){return"ready"===p&&u("prepare"),m++,E.e(e).then(t,(function(e){throw t(),e}));function t(){m--,"prepare"===p&&(y[e]||O(e),0===m&&0===v&&M())}},o.t=function(e,t){return 1&t&&(e=o(e)),E.t(e,-2&t)},o}function d(t){var o={_acceptedDependencies:{},_declinedDependencies:{},_selfAccepted:!1,_selfDeclined:!1,_selfInvalidated:!1,_disposeHandlers:[],_main:n!==t,active:!0,accept:function(e,t){if(void 0===e)o._selfAccepted=!0;else if("function"==typeof e)o._selfAccepted=e;else if("object"==typeof e)for(var n=0;n<e.length;n++)o._acceptedDependencies[e[n]]=t||function(){};else o._acceptedDependencies[e]=t||function(){}},decline:function(e){if(void 0===e)o._selfDeclined=!0;else if("object"==typeof e)for(var t=0;t<e.length;t++)o._declinedDependencies[e[t]]=!0;else o._declinedDependencies[e]=!0},dispose:function(e){o._disposeHandlers.push(e)},addDisposeHandler:function(e){o._disposeHandlers.push(e)},removeDisposeHandler:function(e){var t=o._disposeHandlers.indexOf(e);t>=0&&o._disposeHandlers.splice(t,1)},invalidate:function(){switch(this._selfInvalidated=!0,p){case"idle":(b={})[t]=e[t],u("ready");break;case"ready":_(t);break;case"prepare":case"check":case"dispose":case"apply":(g=g||[]).push(t)}},check:B,apply:L,status:function(e){if(!e)return p;l.push(e)},addStatusHandler:function(e){l.push(e)},removeStatusHandler:function(e){var t=l.indexOf(e);t>=0&&l.splice(t,1)},data:i[t]};return n=void 0,o}var l=[],p="idle";function u(e){p=e;for(var t=0;t<l.length;t++)l[t].call(null,e)}var f,b,h,g,v=0,m=0,y={},w={},x={};function k(e){return+e+""===e?+e:e}function B(e){if("idle"!==p)throw new Error("check() is only allowed in idle status");return o=e,u("check"),(t=1e4,t=t||1e4,new Promise((function(e,n){if("undefined"==typeof XMLHttpRequest)return n(new Error("No browser support"));try{var o=new XMLHttpRequest,i=E.p+""+r+".hot-update.json";o.open("GET",i,!0),o.timeout=t,o.send(null)}catch(e){return n(e)}o.onreadystatechange=function(){if(4===o.readyState)if(0===o.status)n(new Error("Manifest request to "+i+" timed out."));else if(404===o.status)e();else if(200!==o.status&&304!==o.status)n(new Error("Manifest request to "+i+" failed."));else{try{var t=JSON.parse(o.responseText)}catch(e){return void n(e)}e(t)}}}))).then((function(e){if(!e)return u(C()?"ready":"idle"),null;w={},y={},x=e.c,h=e.h,u("prepare");var t=new Promise((function(e,t){f={resolve:e,reject:t}}));b={};return O(0),"prepare"===p&&0===m&&0===v&&M(),t}));var t}function O(e){x[e]?(w[e]=!0,v++,function(e){var t=document.createElement("script");t.charset="utf-8",t.src=E.p+""+e+"."+r+".hot-update.js",document.head.appendChild(t)}(e)):y[e]=!0}function M(){u("ready");var e=f;if(f=null,e)if(o)Promise.resolve().then((function(){return L(o)})).then((function(t){e.resolve(t)}),(function(t){e.reject(t)}));else{var t=[];for(var n in b)Object.prototype.hasOwnProperty.call(b,n)&&t.push(k(n));e.resolve(t)}}function L(t){if("ready"!==p)throw new Error("apply() is only allowed in ready status");return function t(o){var s,c,d,l,p;function f(e){for(var t=[e],n={},o=t.map((function(e){return{chain:[e],id:e}}));o.length>0;){var r=o.pop(),i=r.id,a=r.chain;if((l=A[i])&&(!l.hot._selfAccepted||l.hot._selfInvalidated)){if(l.hot._selfDeclined)return{type:"self-declined",chain:a,moduleId:i};if(l.hot._main)return{type:"unaccepted",chain:a,moduleId:i};for(var s=0;s<l.parents.length;s++){var c=l.parents[s],d=A[c];if(d){if(d.hot._declinedDependencies[i])return{type:"declined",chain:a.concat([c]),moduleId:i,parentId:c};-1===t.indexOf(c)&&(d.hot._acceptedDependencies[i]?(n[c]||(n[c]=[]),v(n[c],[i])):(delete n[c],t.push(c),o.push({chain:a.concat([c]),id:c})))}}}}return{type:"accepted",moduleId:e,outdatedModules:t,outdatedDependencies:n}}function v(e,t){for(var n=0;n<t.length;n++){var o=t[n];-1===e.indexOf(o)&&e.push(o)}}C();var m={},y=[],w={},B=function(){console.warn("[HMR] unexpected require("+M.moduleId+") to disposed module")};for(var O in b)if(Object.prototype.hasOwnProperty.call(b,O)){var M;p=k(O),M=b[O]?f(p):{type:"disposed",moduleId:O};var L=!1,_=!1,I=!1,S="";switch(M.chain&&(S="\nUpdate propagation: "+M.chain.join(" -> ")),M.type){case"self-declined":o.onDeclined&&o.onDeclined(M),o.ignoreDeclined||(L=new Error("Aborted because of self decline: "+M.moduleId+S));break;case"declined":o.onDeclined&&o.onDeclined(M),o.ignoreDeclined||(L=new Error("Aborted because of declined dependency: "+M.moduleId+" in "+M.parentId+S));break;case"unaccepted":o.onUnaccepted&&o.onUnaccepted(M),o.ignoreUnaccepted||(L=new Error("Aborted because "+p+" is not accepted"+S));break;case"accepted":o.onAccepted&&o.onAccepted(M),_=!0;break;case"disposed":o.onDisposed&&o.onDisposed(M),I=!0;break;default:throw new Error("Unexception type "+M.type)}if(L)return u("abort"),Promise.reject(L);if(_)for(p in w[p]=b[p],v(y,M.outdatedModules),M.outdatedDependencies)Object.prototype.hasOwnProperty.call(M.outdatedDependencies,p)&&(m[p]||(m[p]=[]),v(m[p],M.outdatedDependencies[p]));I&&(v(y,[M.moduleId]),w[p]=B)}var j,D=[];for(c=0;c<y.length;c++)p=y[c],A[p]&&A[p].hot._selfAccepted&&w[p]!==B&&!A[p].hot._selfInvalidated&&D.push({module:p,parents:A[p].parents.slice(),errorHandler:A[p].hot._selfAccepted});u("dispose"),Object.keys(x).forEach((function(e){!1===x[e]&&function(e){delete installedChunks[e]}(e)}));var z,N,T=y.slice();for(;T.length>0;)if(p=T.pop(),l=A[p]){var H={},P=l.hot._disposeHandlers;for(d=0;d<P.length;d++)(s=P[d])(H);for(i[p]=H,l.hot.active=!1,delete A[p],delete m[p],d=0;d<l.children.length;d++){var Y=A[l.children[d]];Y&&((j=Y.parents.indexOf(p))>=0&&Y.parents.splice(j,1))}}for(p in m)if(Object.prototype.hasOwnProperty.call(m,p)&&(l=A[p]))for(N=m[p],d=0;d<N.length;d++)z=N[d],(j=l.children.indexOf(z))>=0&&l.children.splice(j,1);u("apply"),void 0!==h&&(r=h,h=void 0);for(p in b=void 0,w)Object.prototype.hasOwnProperty.call(w,p)&&(e[p]=w[p]);var R=null;for(p in m)if(Object.prototype.hasOwnProperty.call(m,p)&&(l=A[p])){N=m[p];var U=[];for(c=0;c<N.length;c++)if(z=N[c],s=l.hot._acceptedDependencies[z]){if(-1!==U.indexOf(s))continue;U.push(s)}for(c=0;c<U.length;c++){s=U[c];try{s(N)}catch(e){o.onErrored&&o.onErrored({type:"accept-errored",moduleId:p,dependencyId:N[c],error:e}),o.ignoreErrored||R||(R=e)}}}for(c=0;c<D.length;c++){var $=D[c];p=$.module,a=$.parents,n=p;try{E(p)}catch(e){if("function"==typeof $.errorHandler)try{$.errorHandler(e)}catch(t){o.onErrored&&o.onErrored({type:"self-accept-error-handler-errored",moduleId:p,error:t,originalError:e}),o.ignoreErrored||R||(R=t),R||(R=e)}else o.onErrored&&o.onErrored({type:"self-accept-errored",moduleId:p,error:e}),o.ignoreErrored||R||(R=e)}}if(R)return u("fail"),Promise.reject(R);if(g)return t(o).then((function(e){return y.forEach((function(t){e.indexOf(t)<0&&e.push(t)})),e}));return u("idle"),new Promise((function(e){e(y)}))}(t=t||{})}function C(){if(g)return b||(b={}),g.forEach(_),g=void 0,!0}function _(t){Object.prototype.hasOwnProperty.call(b,t)||(b[t]=e[t])}var A={};function E(t){if(A[t])return A[t].exports;var n=A[t]={i:t,l:!1,exports:{},hot:d(t),parents:(s=a,a=[],s),children:[]};return e[t].call(n.exports,n,n.exports,c(t)),n.l=!0,n.exports}E.m=e,E.c=A,E.d=function(e,t,n){E.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},E.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},E.t=function(e,t){if(1&t&&(e=E(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(E.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)E.d(n,o,function(t){return e[t]}.bind(null,o));return n},E.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return E.d(t,"a",t),t},E.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},E.p="",E.h=function(){return r},c(1)(E.s=1)}([function(e,t,n){(t=e.exports=n(4)(!1)).push([e.i,"@font-face{font-family:Inter;font-style:normal;font-weight:100;src:url(i/fonts/Inter-Thin.ttf)}@font-face{font-family:Inter;font-style:normal;font-weight:200;src:url(i/fonts/Inter-ExtraLight.ttf)}@font-face{font-family:Inter;font-style:normal;font-weight:300;src:url(i/fonts/Inter-Light.ttf)}@font-face{font-family:Inter;font-style:normal;font-weight:400;src:url(i/fonts/Inter-Regular.ttf)}@font-face{font-family:Inter;font-style:normal;font-weight:500;src:url(i/fonts/Inter-Medium.ttf)}@font-face{font-family:Inter;font-style:normal;font-weight:600;src:url(i/fonts/Inter-SemiBold.ttf)}@font-face{font-family:Inter;font-style:normal;font-weight:700;src:url(i/fonts/Inter-Bold.ttf)}@font-face{font-family:Inter;font-style:normal;font-weight:800;src:url(i/fonts/Inter-ExtraBold.ttf)}@font-face{font-family:Inter;font-style:normal;font-weight:900;src:url(i/fonts/Inter-Black.ttf)}body{padding:0;margin:0}.button[data-svg-icon=reload]:before,.icon-button[data-svg-icon=reload]:before{background:url(\"data:image/svg+xml;charset=utf-8,%3Csvg height='42.667' viewBox='0 0 11.288889 11.28889' width='42.667' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M10.936 7.056H7.408a.353.353 0 0 0 0 .705h2.694A4.932 4.932 0 0 1 .762 6.35H.049a5.642 5.642 0 0 0 5.595 4.939 5.644 5.644 0 0 0 4.94-2.914v2.561a.353.353 0 0 0 .705 0V7.408c0-.374-.353-.352-.353-.352zM.353 4.233H3.88a.353.353 0 0 0 0-.705H1.185a4.934 4.934 0 0 1 9.342 1.41h.713A5.642 5.642 0 0 0 5.644 0 5.644 5.644 0 0 0 .706 2.914V.353a.353.353 0 0 0-.706 0V3.88c0 .342.353.352.353.352' fill='%23fff'/%3E%3C/svg%3E\") no-repeat}.button[data-svg-icon=check]:before,.icon-button[data-svg-icon=check]:before{background:url(\"data:image/svg+xml;charset=utf-8,%3Csvg height='34.673' viewBox='0 0 11.28554 9.1739865' width='42.654' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M10.354 1.99S4.337 8.126 4.242 8.225a.713.713 0 0 1-1.019 0L.91 5.864a.75.75 0 0 1 .021-1.02.713.713 0 0 1 1.02 0l1.781 1.82L9.336.95a.713.713 0 0 1 1.018 0 .747.747 0 0 1 0 1.04zm.51-1.559a1.419 1.419 0 0 0-2.038 0L3.732 5.624 2.46 4.326a1.425 1.425 0 0 0-2.037 0 1.49 1.49 0 0 0 0 2.078l2.292 2.339a1.419 1.419 0 0 0 2.037 0l6.113-6.234a1.49 1.49 0 0 0 0-2.078' fill='%23fff'/%3E%3C/svg%3E\") no-repeat}.button[data-svg-icon=pages]:before,.icon-button[data-svg-icon=pages]:before{background:url(\"data:image/svg+xml;charset=utf-8,%3Csvg height='42.667' viewBox='0 0 9.8777804 11.28891' width='37.333' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M8.114 2.822c-.376 0-.706-.684-.706-1.048V.716l1.764 2.106zm1.058 5.645c0 .36-.335.705-.705.705H3.175c-.37 0-.706-.346-.706-.705V1.41c0-.36.336-.705.706-.705h3.528c-.006.81 0 1.418 0 1.418 0 .733.66 1.404 1.41 1.404h1.06zm-2.47 2.116h-5.29c-.371 0-.706-.345-.706-.705V2.822c0-.36.301-.695.672-.695l.386-.01v6.35c0 .726.665 1.41 1.411 1.41h4.233c0 .36-.335.706-.705.706zM7.409 0H3.175c-.746 0-1.411.684-1.411 1.411l-.408.01C.61 1.422 0 2.097 0 2.823v7.056c0 .727.665 1.41 1.411 1.41h5.292c.746 0 1.41-.683 1.41-1.41h.354c.746 0 1.41-.685 1.41-1.411V2.829zm0 4.946H4.233a.353.353 0 0 0 0 .706h3.175a.353.353 0 0 0 0-.706zm0 1.76H4.233a.353.353 0 0 0 0 .706h3.175a.353.353 0 0 0 0-.706' fill='%23fff'/%3E%3C/svg%3E\") no-repeat}.button[data-svg-icon=arrow-left]:before,.icon-button[data-svg-icon=arrow-left]:before{background:url(\"data:image/svg+xml;charset=utf-8,%3Csvg height='31.993' viewBox='0 0 4.9333664 8.4649073' width='18.646' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M.858 4.23L4.83.605a.354.354 0 0 0 0-.5.357.357 0 0 0-.502 0L.101 3.962a.35.35 0 0 0-.1.268.355.355 0 0 0 .1.271l4.226 3.86a.357.357 0 0 0 .502 0 .354.354 0 0 0 0-.501z' fill='%23fff'/%3E%3C/svg%3E\") no-repeat;background-position:45% 50%!important;background-size:30%!important}.button[data-svg-icon=arrow-right]:before,.icon-button[data-svg-icon=arrow-right]:before{background:url(\"data:image/svg+xml;charset=utf-8,%3Csvg height='31.993' viewBox='0 0 4.9445979 8.4649073' width='18.688' xmlns='http://www.w3.org/2000/svg'%3E%3Cpath d='M4.843 3.963L.607.103a.359.359 0 0 0-.503 0 .354.354 0 0 0 0 .501l3.98 3.627-3.98 3.63a.354.354 0 0 0 0 .5c.14.138.364.138.503 0l4.236-3.859a.354.354 0 0 0 .101-.271.35.35 0 0 0-.1-.268' fill='%23fff'/%3E%3C/svg%3E\") no-repeat;background-position:55% 50%!important;background-size:30%!important}.button[data-svg-icon=close]:before,.icon-button[data-svg-icon=close]:before{background:url(i/images/close.svg) no-repeat}:root{--opacity-disabled:.6;--transition:ease .3s;--mw-h:405px;--mw-w:720px;--mw-bgc:#fff;--mw-cp:28px;--btn-h:40px;--btn-w:120px;--btn-w-medium:210px;--btn-w-large:290px;--btn-txt-c:#fff;--btn-font-s:16px;--btn-bgc:#31d7c0;--btn-icon-bgc:#3ac6b3;--btn-br:calc(var(--btn-h) / 2);--btn-hc:#23b39f;--btn-ihc:#1c8f7f;--pp-btn-s:56px;--pp-btn-br:0px;--pp-btn-hc:#23b39f;--pp-btn-bgc:#31d7c0;--pp-btn-ms:14px;--checkbox-s:20px;--checkbox-mc:#23b39f;--checkbox-bc:#23b39f;--checkbox-th:3px;--checkbox-tr:opacity .3s;--checkbox-br:0px;--radio-s:20px;--radio-bc:#23b39f;--radio-th:3px;--radio-tr:opacity .3s;--i-btn-s:56px;--i-btn-bgc:hsla(0,0%,100%,.5);--i-btn-br:0px;--i-btn-hc:rgba(1,82,170,.92);--p-btn-s:35px;--p-btn-bgc:#31d7c0;--p-btn-hc:#23b39f}.play-button{position:absolute;top:50%;-webkit-transform:translateY(-50%);transform:translateY(-50%)}.card .play-button,.play-button{height:30px;width:30px;cursor:pointer}.card .play-button{position:relative;display:inline-block}.play-button input{display:none}.play-button input:disabled,.play-button input:disabled+span{opacity:var(--opacity-disabled);cursor:default}.play-button span{height:inherit;width:inherit;display:grid;position:absolute;top:50%;left:50%;border-radius:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);background:url(i/images/play_btn.svg) no-repeat;background-size:100%;box-shadow:2px 2px 4px 0 rgba(0,0,0,.5)}.play-button input:checked+span{background:url(i/images/pause_btn.svg) no-repeat;background-size:100%}.input-field{padding:0;padding:6px 12px}.input-field,.textarea{border:1px solid #31d7c0;outline:0}.textarea{padding:0;padding:12px;resize:none;word-wrap:break-word}.icon-button{all:unset;height:var(--i-btn-s);width:var(--i-btn-s);position:relative;border:0;padding:0;outline:0;cursor:pointer}.icon-button[disabled]{cursor:default}.icon-button:after,.icon-button[data-svg-icon]:before,.icon-button[disabled]:after{height:var(--i-btn-s);width:var(--i-btn-s);position:absolute;top:0;left:0;content:\"\";border-radius:var(--i-btn-br);transition:var(--transition);background-color:#fff;opacity:0}.icon-button[data-svg-icon]:before{background-size:50%;background-position:50%;background-color:transparent;transition:var(--transition);opacity:1}.icon-button[disabled]:hover:before{background-color:var(--i-btn-bgc)}.icon-button[disabled]:after{opacity:var(--opacity-disabled)}.radio{position:relative;line-height:var(--radio-s);display:inline-block;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}.radio input[type=radio]{display:none}.radio span{margin-left:var(--radio-s);padding:0 8px}.radio span:before{background-color:#fff;box-sizing:border-box;border:solid var(--radio-th) var(--radio-bc);border-radius:50%}.radio span:after,.radio span:before{height:var(--radio-s);width:var(--radio-s);position:absolute;top:0;left:0;content:\"\"}.radio span:after{-webkit-transform:scale(.4);transform:scale(.4);border-radius:50%;background-color:var(--radio-bc);opacity:0}.radio input[type=radio]:checked+span:after{opacity:1;transition:var(--radio-tr)}.checkbox{position:relative;line-height:var(--checkbox-s);display:inline-block;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer}.checkbox input[type=checkbox]{display:none}.checkbox span{margin-left:var(--checkbox-s);padding:0 8px}.checkbox span:before{height:var(--checkbox-s);width:var(--checkbox-s);position:absolute;top:0;left:0;content:\"\";background-color:#fff;box-sizing:border-box;border:solid var(--checkbox-th) var(--checkbox-bc);border-radius:var(--checkbox-br)}.checkbox span:after{height:calc(var(--checkbox-s)/ 5);width:calc(var(--checkbox-s)/ 2.5);position:absolute;top:0;left:0;content:\"\";margin-left:calc(var(--checkbox-s)/ 4);margin-top:calc(var(--checkbox-s)/ 4);border-bottom:solid var(--checkbox-th) var(--checkbox-mc);border-left:solid var(--checkbox-th) var(--checkbox-mc);-webkit-transform:rotate(-45deg);transform:rotate(-45deg);opacity:0;transition:var(--checkbox-tr)}.checkbox input[type=checkbox]:checked+span:after{opacity:1}.modal-window,.modal-window:before{height:100%;width:100%;top:0;left:0;opacity:0;transition:var(--transition)}.modal-window{display:grid;position:fixed;z-index:1;visibility:hidden}.modal-window:before{position:absolute;content:\"\";background-color:#000}.modal-window:target:before{opacity:.5}.modal-window:target{visibility:visible;opacity:1}.modal-window div:first-child{height:var(--mw-h);width:var(--mw-w);position:relative;margin:auto;background-color:var(--mw-bgc);transition:var(--transition);-webkit-transform:scale(.6);transform:scale(.6);box-sizing:border-box;padding:var(--mw-cp)}.modal-window:target>div:first-child{-webkit-transform:scale(1);transform:scale(1)}.modal-window div:first-child a[href=\"#\"]:last-child{position:absolute;top:100%;left:50%;-webkit-transform:translate(-50%,calc(-100% - 28px));transform:translate(-50%,calc(-100% - 28px))}.button{height:var(--btn-h);width:var(--btn-w);position:relative;display:inline-block;background-color:var(--btn-bgc);color:var(--btn-txt-c);line-height:var(--btn-h);transition:var(--transition);border-radius:var(--btn-br);border:none;outline:0;padding:0;text-align:center;font-size:var(--btn-font-s);-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;cursor:pointer;text-decoration:none}.button.medium{width:var(--btn-w-medium)}.button.large{width:var(--btn-w-large)}.button[disabled],.button[disabled]:hover{background-color:var(--btn-bgc);opacity:var(--opacity-disabled);cursor:default}.button[disabled]:hover:after{opacity:0;background-color:var(--btn-icon-bgc)}.button[data-svg-icon]:before{height:var(--btn-h);width:var(--btn-h);display:block;float:left;content:\"\";background-size:48%;background-position-x:58%;background-position-y:center;background-color:var(--btn-icon-bgc);border-radius:var(--btn-br);border-top-right-radius:0;border-bottom-right-radius:0;transition:var(--transition)}.button:hover{background-color:var(--btn-hc)}.button:hover:before{background-color:var(--btn-ihc)}.button[disabled]:hover:before{background-color:var(--btn-icon-bgc)}.pp-button{height:var(--pp-btn-s);width:var(--pp-btn-s);position:relative;display:inline-block;cursor:pointer}.pp-button input{display:none}.pp-button input:disabled,.pp-button input:disabled+span{opacity:var(--opacity-disabled);background-color:var(--pp-btn-bgc);cursor:default}.pp-button span{height:inherit;width:inherit;display:grid;position:absolute;top:50%;left:50%;-webkit-transform:translate(-50%,-50%);transform:translate(-50%,-50%);background-color:var(--btn-bgc);transition:var(--transition);border-radius:var(--pp-btn-br)}.pp-button span:hover{background-color:var(--pp-btn-hc)}.pp-button span:before{height:50%;width:0;display:block;content:\"\";box-sizing:border-box;border-color:transparent transparent transparent #fff;border-style:solid;border-width:var(--pp-btn-ms) 0 var(--pp-btn-ms) calc(var(--pp-btn-s)/ 2);-webkit-transform:translate(10%);transform:translate(10%);transition:var(--transition);margin:auto}@supports (-moz-appearance:none){.pp-button span:before{-webkit-backface-visibility:hidden;backface-visibility:hidden}}.pp-button input:checked+span:before{border-style:double;border-width:0 0 0 calc(var(--pp-btn-s)/ 2);-webkit-transform:translate(0);transform:translate(0)}.pp-button.circle span{border-radius:50%}.pp-button.circle span:before{-webkit-transform:translate(10%) scale(.96);transform:translate(10%) scale(.96)}.pp-button.circle input:checked+span:before{-webkit-transform:translate(0) scale(.96);transform:translate(0) scale(.96)}.ieWrapper{position:relative;font-family:Inter,sans-serif;left:0;padding-left:0!important;margin:0;padding:0;background:url(i/images/bg.jpg) 0 0 repeat fixed;background-size:cover}.ieWrapper input{box-sizing:unset}table th{background:#0067ac;color:#fff}.task{position:relative;max-width:1758px;height:125px;margin:0 auto;font-family:Inter,sans-serif;font-size:25px;font-weight:700;color:#fff;text-align:justify;padding:0 15px;line-height:1.4em}.task .outer,.taskSndCont .outer{width:100%;height:125px;display:table}.taskSndCont .inner{padding-left:10px}.task .inner,.taskSndCont .inner{display:table-cell;vertical-align:middle;line-height:30px}.classNum{display:none;position:absolute;width:100%;top:10px;font-size:30px;line-height:30px;padding:0;color:#f9c11e;text-shadow:0 2px 4px rgba(0,0,0,.5)}.classNum,.title>h1{text-align:center;font-family:Inter,sans-serif;text-transform:uppercase;margin:0;font-weight:900}.title>h1{display:flex;flex-direction:row;font-size:50px;line-height:50px;padding:25px 0 10px;color:#fff;text-shadow:2px 2px 11px rgba(0,0,0,.5)}.title h1:after,.title h1:before{content:\"\";flex:1 1;border-bottom:4px dotted;margin:auto}.title h1:before{margin-right:10px}.title h1:after{margin-left:10px}.testControls{display:flex;flex-direction:row;justify-content:center}.testControls button{margin:10px 5px}.testDiagnostic[data-right]{text-align:center;font-weight:700}.testDiagnostic[data-right=false]{color:red}.testDiagnostic[data-right=true]{color:#068606}.taskSndCont{display:inline-flex;clear:both}.taskSndCont [data-sound-ig]{width:30px;height:125px;position:relative;display:block}.cardSndCont{display:inline-flex;clear:both}.cardSndCont .soundBtn{width:30px;height:30px;margin:16px 0 0}.cardSndCont .outer{margin:5px 0 0 -35px;text-indent:45px}[data-printer-button]{color:#2feefd;text-decoration:underline;cursor:pointer}[data-printer-button]:hover{text-decoration:none}body,html{overflow:hidden;width:100%;height:100%;margin:0;padding:0}.renderCanvas{width:100%;height:100%;touch-action:none}.gui-wrapper{color:red}",""]),t.locals={button:"button","icon-button":"icon-button","play-button":"play-button",card:"card","input-field":"input-field",textarea:"textarea",radio:"radio",checkbox:"checkbox","modal-window":"modal-window",medium:"medium",large:"large","pp-button":"pp-button",circle:"circle",ieWrapper:"ieWrapper",task:"task",outer:"outer",taskSndCont:"taskSndCont",inner:"inner",classNum:"classNum",title:"title",testControls:"testControls",testDiagnostic:"testDiagnostic",cardSndCont:"cardSndCont",soundBtn:"soundBtn",renderCanvas:"renderCanvas","gui-wrapper":"gui-wrapper"}},function(e,t,n){"use strict";!function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);t.default=e}(n(2));var o,r=n(3);(o=r)&&o.__esModule,n(7);window.lab_glass_water={},window.lab_glass_water.initLab=function(e,t,n){BABYLON.DefaultLoadingScreen.prototype.displayLoadingUI=function(){if(document.getElementById("customLoadingScreenDiv"))document.getElementById("customLoadingScreenDiv").style.display="initial";else{this._loadingDiv=document.createElement("div"),this._loadingDiv.id="customLoadingScreenDiv",this._loadingDiv.innerHTML="Подготовка оборудования...";var e=document.createElement("style");e.type="text/css",e.innerHTML="\n        #customLoadingScreenDiv{\n            background-color: #779955cc;\n            color: white;\n            font-size:50px;\n            text-align:center;\n        }\n        ",document.getElementsByTagName("head")[0].appendChild(e),this._resizeLoadingUI(),window.addEventListener("resize",this._resizeLoadingUI),document.body.appendChild(this._loadingDiv)}},BABYLON.DefaultLoadingScreen.prototype.hideLoadingUI=function(){};var o,r=null,i=null,a=null;o=e.querySelector(".renderCanvas"),r=new BABYLON.Engine(o,!0,{preserveDrawingBuffer:!0,stencil:!0}),i=function(){i=new BABYLON.Scene(r),new BABYLON.ArcRotateCamera("Camera",Math.PI/2,Math.PI/2.8,10,BABYLON.Vector3.Zero()).upperBetaLimit=Math.PI/2.3,new BABYLON.HemisphericLight("hemi",new BABYLON.Vector3(0,80,0)),i.clearColor=new BABYLON.Color3(101/255,106/255,148/255);var e=BABYLON.MeshBuilder.CreateGround("ground",{width:25,height:60,sideOrientation:BABYLON.Mesh.DOUBLESIDE},i);e.receiveShadows=!0;var t=new BABYLON.StandardMaterial("pbMaterial");return t.diffuseTexture=new BABYLON.Texture("./i/textures/table.jpg",i),e.material=t,e.position=new BABYLON.Vector3(0,0,0),e.setPivotPoint(new BABYLON.Vector3(0,0,0)),i}(),a=i,r.runRenderLoop((function(){a&&a.render()})),window.addEventListener("resize",(function(){}));var s=new BABYLON.HDRCubeTexture("./i/textures/hdri/Cafe_Hallway.hdr",i,512),c=new BABYLON.PBRMaterial("glass",i);c.reflectionTexture=s,c.indexOfRefraction=.1,c.alpha=.4,c.directIntensity=0,c.environmentIntensity=2,c.cameraExposure=1.66,c.cameraContrast=1.66,c.microSurface=1,c.reflectivityColor=new BABYLON.Color3(.2,.2,.2),c.albedoColor=new BABYLON.Color3(.95,.95,.95);var d=new BABYLON.PBRMaterial("water",i);d.metallic=.3,d.roughness=0,d.alpha=.6,d.subSurface.isRefractionEnabled=!0,d.subSurface.indexOfRefraction=1.2,i.environmentTexture=BABYLON.CubeTexture.CreateFromPrefilteredData("i/textures/environment.dds",i);var l=new BABYLON.HighlightLayer("hl1",i),p=new BABYLON.AssetsManager(i),u=p.addMeshTask("glassEmptyTask","","","./i/obj/glass_half.obj"),f=p.addMeshTask("glassHalfTask","","","./i/obj/glass_half.obj"),b=p.addMeshTask("saltBigTask","","","./i/obj/salt.obj"),h=p.addMeshTask("saltSmallTask","","","./i/obj/salt.obj"),g=void 0,v=void 0,m=void 0;u.onSuccess=function(e){e.loadedMeshes.forEach((function(e){e.scaling.x=.005,e.scaling.y=.005,e.scaling.z=.005,e.position.x=-3,e.position.y=.89,e.position.z=2})),e.loadedMeshes[1].material=c,e.loadedMeshes[1].name="glassHalf",e.loadedMeshes[0].material=d,e.loadedMeshes[0].name="waterHalf",(v=e.loadedMeshes[1]).name="glassEmpty",v.addChild(e.loadedMeshes[0]),v.getChildren()[0].visibility=0},f.onSuccess=function(e){e.loadedMeshes.forEach((function(e){e.scaling.x=.005,e.scaling.y=.005,e.scaling.z=.005,e.position.x=3,e.position.y=.89,e.position.z=2})),e.loadedMeshes[1].material=c,e.loadedMeshes[1].name="glassHalf",e.loadedMeshes[0].material=d,e.loadedMeshes[0].name="waterHalf",(g=e.loadedMeshes[1]).addChild(e.loadedMeshes[0]),g.name="glassHalf",g.addBehavior(y),g.actionManager=new BABYLON.ActionManager(i),g.actionManager.registerAction(new BABYLON.ExecuteCodeAction(BABYLON.ActionManager.OnPickTrigger,(function(){console.log("in")})))},b.onSuccess=function(e){e.loadedMeshes.forEach((function(e){e.scaling.x=.01,e.scaling.y=.015,e.scaling.z=.007,e.position.x=2,e.position.y=.2,e.position.z=2})),e.loadedMeshes[0].name="saltBig",(m=e.loadedMeshes[0]).addBehavior(w)},h.onSuccess=function(e){e.loadedMeshes.forEach((function(e){e.scaling.x=.01,e.scaling.y=.0075,e.scaling.z=.007,e.position.x=1,e.position.y=.2,e.position.z=2})),e.loadedMeshes[0].name="saltSmall",e.loadedMeshes[0]};var y=new BABYLON.PointerDragBehavior({dragPlaneNormal:new BABYLON.Vector3(0,0,1)});y.useObjectOrienationForDragging=!1,y.onDragStartObservable.add((function(e){l.addMesh(g,BABYLON.Color3.Red())})),y.onDragObservable.add((function(e){g.intersectsMesh(v)?l.addMesh(v,BABYLON.Color3.Green()):l.removeMesh(v)})),y.onDragEndObservable.add((function(e){g.visibility=1,g.position.x=3,g.position.y=.89,g.position.z=2,l.removeMesh(g),l.removeMesh(v),g.intersectsMesh(v)&&confirm("Вы хотите перелить воды?")&&(g.getChildren()[0].visibility=0,v.getChildren()[0].visibility=1,x())}));var w=new BABYLON.PointerDragBehavior({dragPlaneNormal:new BABYLON.Vector3(0,0,1)});w.isInGlass=!1,w.onDragStartObservable.add((function(e,t){l.addMesh(m,BABYLON.Color3.Red())})),w.onDragObservable.add((function(e){m.intersectsMesh(v)?l.addMesh(v,BABYLON.Color3.Green()):l.removeMesh(v)})),w.onDragEndObservable.add((function(e){l.removeMesh(m),l.removeMesh(v),m.position.x=2,m.position.y=.2,m.position.z=2,m.intersectsMesh(v)&&(m.position=v.position,m.position.y-=.8,m.position.x+=.2,m.rotation.y=.64,w.isInGlass=!0,x())}));var x=function(){1==v.getChildren()[0].visibility&&w.isInGlass};p.onFinish=function(e){console.log("in"),document.getElementById("customLoadingScreenDiv").style.display="none"},p.load(),n()}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.title="Пример интерактивного видео<br/>c формулами в MathJax $\\int_{a}^{b} f(x)dx = F(b) - F(a)$",t.videoSrc="i/video/video_.mp4",t.stopTimes=[{time:1,text:"Вопрос №1",content:{type:"inputText",questionText:"Это вещество содержится в клеточном соке многих растений, придавая клеткам розовый, фиолетовый или сине-голубой цвет. Цвет этого вещества зависит от кислотности окружающей среды. Как называется данное вещество?",content:"Ответ: |_inp_| text |_inp_|",trueAns:[["Антоциан","протонема","заросток"],["зигота","спорофит"]],comment:{type:"html",content:"Название этого вещества – антоциан – происходит от двух греческих слов: антос – цветок, цианос – синий, лазоревый."}}},{time:2,text:"Вопрос №2",content:[{type:"choice",questionText:"<b>Задание 1</b>. Верны ли следующие суждения о мышечных тканях человека?<br/>\n                А. Волокна сердечной мышцы имеют контактные участки, благодаря которым сигнал от одной клетки быстро передаётся соседним клеткам.<br/>\n                Б. Гладкая мышечная ткань обладает способностью к быстрому сокращению.",answers:["Верно только А.","Верно только Б.","Верны оба суждения.","Оба суждения неверны."],trueAns:[1],comment:{type:"html",content:"<b>Пояснение</b><br/>\n                    Утверждение А – верное. Сердечная мышечная ткань имеет поперечную исчерченность. Однако в отличие от скелетной мышцы, здесь есть специальные участки, где мышечные волокна смыкаются. Благодаря такому строению сокращение одного волокна быстро передаётся соседним. Это обеспечивает одновременность сокращения больших участков сердечной мышцы.\n                    <br/>Утверждение Б – неверно. Гладкая мышечная ткань сокращается медленно."}},{type:"choice",questionText:"<b>Задание 2</b>. Верны ли следующие суждения о нервной ткани человека?<br/>\n                А. Основные свойства нервной ткани – это возбудимость и проводимость.<br/>\n                Б. Тела чувствительных нейронов лежат на пути к центральной нервной системе в нервных узлах.",answers:["Верно только А.","Верно только Б.","Верны оба суждения.","Оба суждения неверны."],trueAns:[3],comment:{type:"html",content:"<b>Пояснение</b><br/>\n                    Верны оба суждения."}},{type:"selectorText",questionText:"<b>Задание 3</b>.Вставьте в текст «Ткани человека» пропущенные термины из предложенного перечня, используя для этого цифровые обозначения. Запишите в текст цифры выбранных ответов, а затем получившуюся последовательность цифр (по тексту) впишите в приведённую ниже таблицу.",content:"В организме человека выделяют четыре основные группы тканей. В |_dds_| тканях хорошо развито межклеточное вещество. В |_dds_| и лимфе – межклеточное вещество |_dds_|. В |_dds_| тканях клетки плотно прилегают друг к другу. Эти ткани образуют покровы тела и выстилают полости внутренних органов.",answers:[["эпителиальных","соединительных","нервных"],["крови","клетках"],["прочное","вязкое","жидкое"],["эпителиальных","соединительных","покровных"]],trueAns:[["соединительных"],["крови"],["жидкое"],["эпителиальных"]],comment:{type:"html",content:"<b>Пояснение</b><br/>В организме человека выделяют четыре основные группы тканей. В соединительных тканях хорошо развито межклеточное вещество. В крови и лимфе – межклеточное вещество жидкое. В эпителиальных тканях клетки плотно прилегают друг к другу. Эти ткани образуют покровы тела и выстилают полости внутренних органов."}}]},{time:5,text:"Вопрос №3",content:{type:"selectorText",questionText:"Заполните пропущенные термины.",content:"При слиянии гамет образуется |_dds_|, из которой $mc^2$ прорастает |_dds_|, полностью зависящий от ...",answers:[["зигота","протонема","заросток"],["спорофит","гаметофит"]],trueAns:[["зигота"],["спорофит"]],comment:{type:"html",content:"Больше половины общего объёма $mc^2$ кислорода в мире синтезируется фитопланктоном в мировом океане, и только 30 % кислорода вырабатывается в тропических лесах."}}},{time:10,text:"Вопрос №4",content:{type:"sortableList",questionText:"Установите правильную последовательность $mc^2$ таксонов для хвоща полевого, начиная с самого крупного:",answers:[],rowSize:[320,40],trueAns:["Эукариоты","Растения","Папоротниковидные","Хвощовые","Хвощ","Хвощ полевой $mc^2$"],comment:{type:"",content:""}}},{time:15,text:"Вопрос №5",content:{type:"choice",questionText:"Наиболее интенсивно плазмолиз будет $mc^2$ происходить при следующей комбинации температуры и концентрации окружающего клетку раствора:",answers:["температура 20 °С, концентрация 10 %","температура 30 °С, концентрация 10 %","температура 30 °С, концентрация 20 %","температура 20 °С, концентрация 20 %"],trueAns:[3],comment:{type:"html",content:"Больше половины общего $mc^2$ объёма кислорода в мире синтезируется фитопланктоном в мировом океане, и только 30 % кислорода вырабатывается в тропических лесах."}}},{time:36,text:"Вопрос №6",content:{type:"choice",questionText:"Наиболее интенсивно плазмолиз $mc^2$ будет происходить при следующей комбинации температуры и концентрации окружающего клетку раствора:",answers:["температура 20 °С, концентрация 10 %","температура 30 °С, концентрация 10 %","температура 30 °С, концентрация 20 %","температура 20 °С, концентрация 20 %"],trueAns:[1,2],comment:{type:"img",content:"i/images/slide_1_2.jpg"}}}]},function(e,t,n){var o=n(0);"string"==typeof o&&(o=[[e.i,o,""]]);var r={sourceMap:!0,singleton:!0,hmr:!0,transform:void 0,insertInto:void 0},i=n(5)(o,r);o.locals&&(e.exports=o.locals),e.hot.accept(0,(function(){var t=n(0);if("string"==typeof t&&(t=[[e.i,t,""]]),!function(e,t){var n,o=0;for(n in e){if(!t||e[n]!==t[n])return!1;o++}for(n in t)o--;return 0===o}(o.locals,t.locals))throw new Error("Aborting CSS HMR due to changed css-modules locals.");i(t)})),e.hot.dispose((function(){i()}))},function(e,t){e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=function(e,t){var n=e[1]||"",o=e[3];if(!o)return n;if(t&&"function"==typeof btoa){var r=(a=o,"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(a))))+" */"),i=o.sources.map((function(e){return"/*# sourceURL="+o.sourceRoot+e+" */"}));return[n].concat(i).concat([r]).join("\n")}var a;return[n].join("\n")}(t,e);return t[2]?"@media "+t[2]+"{"+n+"}":n})).join("")},t.i=function(e,n){"string"==typeof e&&(e=[[null,e,""]]);for(var o={},r=0;r<this.length;r++){var i=this[r][0];"number"==typeof i&&(o[i]=!0)}for(r=0;r<e.length;r++){var a=e[r];"number"==typeof a[0]&&o[a[0]]||(n&&!a[2]?a[2]=n:n&&(a[2]="("+a[2]+") and ("+n+")"),t.push(a))}},t}},function(e,t,n){var o,r,i={},a=(o=function(){return window&&document&&document.all&&!window.atob},function(){return void 0===r&&(r=o.apply(this,arguments)),r}),s=function(e){return document.querySelector(e)},c=function(e){var t={};return function(e){if("function"==typeof e)return e();if(void 0===t[e]){var n=s.call(this,e);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}t[e]=n}return t[e]}}(),d=null,l=0,p=[],u=n(6);function f(e,t){for(var n=0;n<e.length;n++){var o=e[n],r=i[o.id];if(r){r.refs++;for(var a=0;a<r.parts.length;a++)r.parts[a](o.parts[a]);for(;a<o.parts.length;a++)r.parts.push(y(o.parts[a],t))}else{var s=[];for(a=0;a<o.parts.length;a++)s.push(y(o.parts[a],t));i[o.id]={id:o.id,refs:1,parts:s}}}}function b(e,t){for(var n=[],o={},r=0;r<e.length;r++){var i=e[r],a=t.base?i[0]+t.base:i[0],s={css:i[1],media:i[2],sourceMap:i[3]};o[a]?o[a].parts.push(s):n.push(o[a]={id:a,parts:[s]})}return n}function h(e,t){var n=c(e.insertInto);if(!n)throw new Error("Couldn't find a style target. This probably means that the value for the 'insertInto' parameter is invalid.");var o=p[p.length-1];if("top"===e.insertAt)o?o.nextSibling?n.insertBefore(t,o.nextSibling):n.appendChild(t):n.insertBefore(t,n.firstChild),p.push(t);else if("bottom"===e.insertAt)n.appendChild(t);else{if("object"!=typeof e.insertAt||!e.insertAt.before)throw new Error("[Style Loader]\n\n Invalid value for parameter 'insertAt' ('options.insertAt') found.\n Must be 'top', 'bottom', or Object.\n (https://github.com/webpack-contrib/style-loader#insertat)\n");var r=c(e.insertInto+" "+e.insertAt.before);n.insertBefore(t,r)}}function g(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e);var t=p.indexOf(e);t>=0&&p.splice(t,1)}function v(e){var t=document.createElement("style");return void 0===e.attrs.type&&(e.attrs.type="text/css"),m(t,e.attrs),h(e,t),t}function m(e,t){Object.keys(t).forEach((function(n){e.setAttribute(n,t[n])}))}function y(e,t){var n,o,r,i;if(t.transform&&e.css){if(!(i=t.transform(e.css)))return function(){};e.css=i}if(t.singleton){var a=l++;n=d||(d=v(t)),o=k.bind(null,n,a,!1),r=k.bind(null,n,a,!0)}else e.sourceMap&&"function"==typeof URL&&"function"==typeof URL.createObjectURL&&"function"==typeof URL.revokeObjectURL&&"function"==typeof Blob&&"function"==typeof btoa?(n=function(e){var t=document.createElement("link");return void 0===e.attrs.type&&(e.attrs.type="text/css"),e.attrs.rel="stylesheet",m(t,e.attrs),h(e,t),t}(t),o=O.bind(null,n,t),r=function(){g(n),n.href&&URL.revokeObjectURL(n.href)}):(n=v(t),o=B.bind(null,n),r=function(){g(n)});return o(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;o(e=t)}else r()}}e.exports=function(e,t){if("undefined"!=typeof DEBUG&&DEBUG&&"object"!=typeof document)throw new Error("The style-loader cannot be used in a non-browser environment");(t=t||{}).attrs="object"==typeof t.attrs?t.attrs:{},t.singleton||"boolean"==typeof t.singleton||(t.singleton=a()),t.insertInto||(t.insertInto="head"),t.insertAt||(t.insertAt="bottom");var n=b(e,t);return f(n,t),function(e){for(var o=[],r=0;r<n.length;r++){var a=n[r];(s=i[a.id]).refs--,o.push(s)}e&&f(b(e,t),t);for(r=0;r<o.length;r++){var s;if(0===(s=o[r]).refs){for(var c=0;c<s.parts.length;c++)s.parts[c]();delete i[s.id]}}}};var w,x=(w=[],function(e,t){return w[e]=t,w.filter(Boolean).join("\n")});function k(e,t,n,o){var r=n?"":o.css;if(e.styleSheet)e.styleSheet.cssText=x(t,r);else{var i=document.createTextNode(r),a=e.childNodes;a[t]&&e.removeChild(a[t]),a.length?e.insertBefore(i,a[t]):e.appendChild(i)}}function B(e,t){var n=t.css,o=t.media;if(o&&e.setAttribute("media",o),e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}function O(e,t,n){var o=n.css,r=n.sourceMap,i=void 0===t.convertToAbsoluteUrls&&r;(t.convertToAbsoluteUrls||i)&&(o=u(o)),r&&(o+="\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(r))))+" */");var a=new Blob([o],{type:"text/css"}),s=e.href;e.href=URL.createObjectURL(a),s&&URL.revokeObjectURL(s)}},function(e,t){e.exports=function(e){var t="undefined"!=typeof window&&window.location;if(!t)throw new Error("fixUrls requires window.location");if(!e||"string"!=typeof e)return e;var n=t.protocol+"//"+t.host,o=n+t.pathname.replace(/\/[^\/]*$/,"/");return e.replace(/url\s*\(((?:[^)(]|\((?:[^)(]+|\([^)(]*\))*\))*)\)/gi,(function(e,t){var r,i=t.trim().replace(/^"(.*)"$/,(function(e,t){return t})).replace(/^'(.*)'$/,(function(e,t){return t}));return/^(#|data:|http:\/\/|https:\/\/|file:\/\/\/|\s*$)/i.test(i)?e:(r=0===i.indexOf("//")?i:0===i.indexOf("/")?n+i:o+i.replace(/^\.\//,""),"url("+JSON.stringify(r)+")")}))}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.restrictObjectPosition=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:-25,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:25,o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:-25,r=arguments.length>4&&void 0!==arguments[4]?arguments[4]:25,i=n-e.scaling.x/2-1,a=t+e.scaling.x/2+1,s=r-e.scaling.z/2-1,c=o-e.scaling.z/2+2;e.position.x>i&&(e.position.x=i);e.position.x<a&&(e.position.x=a);e.position.z>s&&(e.position.z=s);e.position.z<c&&(e.position.z=c)}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,